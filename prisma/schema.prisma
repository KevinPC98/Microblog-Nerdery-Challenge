datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(uuid())
  name          String    @map("name")
  userName      String    @map("user_name")
  email         String    @unique
  password      String
  role          String
  isEmailPublic Boolean   @default(false) @map("is_email_public")
  isNamePublic  Boolean   @default(false) @map("is_name_public")
  isActive      Boolean   @default(false) @map("is_active")
  verifiedAt    DateTime? @map("verified_at")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")

  tokens   Token[]
  posts    Post[]
  comments Comment[]
  likes    Like[]
  reports  Report[]

  @@map("users")
}

model Token {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now()) @map(name: "created_at")
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @map(name: "user_id")
  jti       String   @unique @default(uuid())
  exp       Int?

  @@map(name: "tokens")
}

model Post {
  id        String    @id @default(uuid())
  userId    String    @map("user_id")
  user      User      @relation(fields: [userId], references: [id])
  content   String
  title     String
  isPublic  Boolean   @default(true) @map("is_public")
  createdAt DateTime  @default(now()) @map("created_at")
  comments  Comment[]

  @@map("posts")
}

model Comment {
  id       String  @id @default(uuid())
  post     Post    @relation(fields: [postId], references: [id])
  postId   String  @map("post_id")
  user     User    @relation(fields: [userId], references: [id])
  userId   String  @map("user_id")
  content  String
  isPublic Boolean @default(true) @map("is_public")

  @@map("comments")
}

model Like {
  id         String  @id @default(uuid())
  likeItemId String
  user       User    @relation(fields: [userId], references: [id])
  userId     String  @map("user_id")
  like       Boolean

  @@map("likes")
}

model Report {
  id           String   @id @default(uuid())
  reportItemId String   @map("report_item_id")
  user         User     @relation(fields: [userId], references: [id])
  userId       String   @map("user_id")
  reason       String
  createdAt    DateTime @default(now()) @map("created_at")
  type         String   @map("type")

  @@map("reports")
}
